## A log file for the fluPredict project starting on 021619.
Manually create a folder called fluPredict.
Right click the folder and select Git Bash Here to bring up a git bash window called MINGW64.
At the bash prompt, type git init 
## Need to use the pip at anaconda3/Scripts/pip
Then type pip install tabula-py for converting PDF files to CSV files. 
## from tabula import read_pdf

At R studio:
> getwd()
[1] "C:/Users/guowc_000/Documents"
> setwd("C:/Users/guowc_000/JupyterNotebooks/Kaikai/FluPredict/data")
## Install from CRAN
> install.packages("cdcfluview")
> usflu <- get_flu_data(region = "national", data_source = "ilinet", years = 2010:2018)

> write.csv(usflu,"usflu_nat_2010_2019.csv")



##################################################
# Option 2: Install from GitHub (most up-to-date version)
devtools::install_github("hrbrmstr/cdcfluview")

library(cdcfluview)

# National ILINet data for 1997/98 - 2015/16 seasons
usflu <- get_flu_data(region = "national", data_source = "ilinet", years = 1997:2015)

# HHS Regional ILINet data for 1997/98 - 2015/16 seasons
regionflu <- get_flu_data(region = "HHS", sub_region = 1:10, data_source = "ilinet", years = 1997:2015)
# This function has been deprecated and will be removed in future releases.
# Use either ilinet() or who_nrevss() instead.
##################################################
us
> usflu <- get_flu_data(region = "national", data_source = "ilinet", years = 2010:2018)
> write.csv(usflu, "usflu_national_weekly_10_19.csv",row.names=FALSE)

> regionflu <- get_flu_data(region = "HHS", sub_region = 1:10, data_source = "ilinet", years = 2010:2018)
> write.csv(regionflu,"regionflu_weekly_10_19.csv",row.names=FALSE)
## help("get_flu_data")
> caflu <- get_flu_data(region = "state", sub_region = c("california"), data_source = "ilinet", years = 2010:2018)
> write.csv(caflu,"caflu_weekly_10-19.csv",row.names=FALSE)
## init() and who_nrevss() did not work.

### WHO/NREVSS viral positive tests data: yr09-15 and yr15-19 test diff types so cannot compare them.

y15_19_orig = pd.read_csv("data/usflu_weekly_final_15_19.csv")
y15_19_orig.shape
y=y15_19_orig['% WEIGHTED ILI']

X15_19_orig=pd.read_csv("data/fluGT_Viral_US_final_15_19.csv")
X15_19_orig.shape
X = X15_19_orig[['influenza','PERCENT POSITIVE']]

forest = RandomForestRegressor(max_depth=3, n_estimators=50, random_state=1).fit(X_train,y_train)
print(forest.score(X_train,y_train))
print(forest.score(X_test,y_test))
y_pred = forest.predict(X_test)
y_pred_pd = pd.DataFrame(y_pred)
y_pred_pd.to_csv("y15_19_pred.csv")
# 0.9656614447544949
# 0.8364027859651101

y['week'] = pd.date_range('2015-10-04','2019-02-09',freq='W')
y=y.set_index('week')
y.index

import statsmodels.api as sm
from pylab import rcParams
rcParams['figure.figsize'] = 18, 8
decomposition = sm.tsa.seasonal_decompose(y, model='additive')
fig = decomposition.plot()
plt.show()

import warnings
warnings.filterwarnings("ignore")

https://towardsdatascience.com/an-end-to-end-project-on-time-series-analysis-and-forecasting-with-python-4835e6bf050b







